https://www.tutorialsteacher.com/sass/sass-map-functions

@mixin a-button($base: red, $hover: green, $link: blue) {
   a {
      background-color: $base;
      color: white;
      radius: 3px;
      margin: 2px;

      &:hover {
         color: $hover;
      }

      &:visited {
         color: $link;
      }
   }
}



SCSS: Mixin Variables
@mixin margin-mix($margin...) {
   margin: $margin;
}
.top-bottom-border {
  @include margin-mix(3px 2px);
}


//extend
.button-base {
   margin: 2px;
   radius: 2px;
}

.error-button {
   @extend .button-base;
   background-color: red;
}

.menu-button-error {
   @extend .error-button;
}



//list
index((1 2 3), 2)
join((1, 2, 3), (4 5 6), auto/space)
set-nth(1 2 3, 2, 5) //itens repetidos
append((1, 2, 3), 4, space) //add

//maps
map-get(("red": #ff0000, "green": #00ff00), "green")
map-remove(("red": #ff0000, "green": #00ff00), "red")
map-merge(("red": #ff0000, "green": #00ff00), ("blue": #0000ff))
map-keys(("red": #ff0000, "green": #00ff00))
map-values(("red": #ff0000, "green": #00ff00))
map-has-key(("red": #ff0000, "green": #00ff00), blue)

//if
$test: 12;

p {
  @if $test < 3 {
        text-color: red;
    } @else if $test == 3 {
        text-color: blue;
    } @else {
        text-color: white;
    }
}

//while
@while $p < 5 {
  .item-#{$p} {
    
        color: red;
    
        $p : $p + 1;
  
    }
}

//for
@for $i from 1 to 5 {
   .list-#{$i} {
      width: 2px * $i;
   }
}
